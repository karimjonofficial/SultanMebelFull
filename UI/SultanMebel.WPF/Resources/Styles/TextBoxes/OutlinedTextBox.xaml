<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Colors/TextBoxes/OutlinedTextBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <BackEase Amplitude="2" EasingMode="EaseOut" x:Key="ease_out"/>
    <BackEase Amplitude="2" EasingMode="EaseOut" x:Key="ease_in"/>
    <Style x:Key="OutlinedTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                        <Border.Effect>
                            <DropShadowEffect x:Name="shadow"
                                              BlurRadius="0"
                                              ShadowDepth="0"
                                              Direction="270"
                                              Opacity="0.1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource TextBox.MouseOver.Border}"/>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource TextBox.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource TextBox.Focus.Border}"/>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource TextBox.Focus.Background}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="put_shadow">
                                    <Storyboard >
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource ease_out}"
                                            Duration="0:0:.4"
                                            To="8"
                                            Storyboard.TargetName="shadow"
                                            Storyboard.TargetProperty="BlurRadius"/>
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource ease_out}"
                                            Duration="0:0:.4"
                                            To="1"
                                            Storyboard.TargetName="shadow"
                                            Storyboard.TargetProperty="ShadowDepth"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="remove_shadow">
                                    <Storyboard >
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource ease_in}"
                                            Duration="0:0:.4"
                                            To="0"
                                            Storyboard.TargetName="shadow"
                                            Storyboard.TargetProperty="BlurRadius"/>
                                        <DoubleAnimation
                                            EasingFunction="{StaticResource ease_in}"
                                            Duration="0:0:.4"
                                            To="0"
                                            Storyboard.TargetName="shadow"
                                            Storyboard.TargetProperty="ShadowDepth"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true"/>
                    <Condition Property="IsSelectionActive"
                               Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>